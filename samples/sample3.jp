func A(arg) : {
    return B(arg :: []);
}

func B(a) : {
    return A([]);
}

func pointer() : {
    return [[], "str"];
}

main : f1(b = [], c = []::(true *2) :: true, a = pointer is pointer);

func f1(a, b, c) : {
    A([c]);
    return f2();
    return (b, a) -> {return b[b]; return a;} (a, b);
    A(f1(1 + "str" - 2 * false + "s" / 2, [1, 2, 3] is [], ([].size).size));
    self(self(self));
}

func f2() : {
    if([[true, false]][0]) :
        return void;
    else :
        return [[[1, 2, 3]]] :: [[3, 4]] :: [1];
    return [[1, 2], [[2, 3]]] :: 2 :: true;
}

func self(arg) : {
    return self;
    return self is f2();
    return self is B;
    return A;
}

